# This is all of the graphical code (Kivy code)
# Each screen class in the python code is a section in this code, each different section begins with <INSERT_SCREEN_NAME>: this denotes that the following code
# is for that screen.


# This is for the screen manager, it is not actually a screen so there is no graphical code. The code included for this class is to tell the screenmanager which screens it should be managing/controlling
# essentially initializes the screen manager

#:import Factory kivy.factory.Factory

#:set color_button (52/255, 104/255, 162/255, 1)  # brown
#:set color_button_pressed (52/255, 104/255, 162/255, 1)  # darker brown
#:set color_font (0, 0, 0, 1)

<MySpinnerOption@SpinnerOption>:
    background_normal: ''
    background_color: color_button if self.state == 'down' else color_button_pressed
    background_down: 'atlas://data/images/defaulttheme/button'
    color: color_font

    font_name: app.font_file
    font_size: 25

<MyScreenManager>:
    FuelGaugeLayout:
    FuelInjectionLayout:
    ScreenSaver:
    ErrorPage:
    TankTempPress:
    Mode:
    ModeLocking:
    Message_settings:

<Message_settings>:
    name: 'CAN Settings'

    canvas.before:
    	# This color code is rgba and is for the background
	    Color:
	        rgba: 1, 1, 1, 1
		# Sets the size of the background to the size of the screen
	    Rectangle:
	        size: self.width, self.height

    BoxLayout:
    	# Sets the orientation for the box layout --> vertical
        orientation: 'vertical'

        # Putting a horizontal box layout within the vertical layout, this means that the top portion of the screen is then split horizontally
        FloatLayout:

            # Sets the size of the horizontal box layout so that its
            size: root.width, root.height * (200/960)
            size_hint_y: None

            FloatLayout:
                #size: root.width, root.height * (200/960)
                pos_hint: {'top': 1}

                Spinner:

                    size_hint_x: (5.5/8.5625)
                    pos_hint: {'top': 1}
                    values: app.dropdown_list
                    #background_color: color_button if self.state == 'normal' else color_button_pressed
                    background_down: 'atlas://data/images/defaulttheme/spinner'
                    color: color_font
                    text: app.current_page
                    option_cls: Factory.get("MySpinnerOption")

                    on_text:
                        app.tester(self.text)
                        app.root.current = self.text
                        app.title_changer(self.text)

                Label:

                    text: app.current_page
                    pos_hint: {'top': 1}
                    color: 0, 0, 0, 1
                    size_hint_x: (5.5/8.5625)

                    font_name: app.font_file
                    font_size: ((self.parent.width + self.parent.height) / 2) * 0.14
                    color: 1, 1, 1, 1
                    canvas.before:
                        Color:
                            rgb: (52/255, 104/255, 162/255)
                        Rectangle:
                            size: self.width, self.height
                            pos: self.x, self.y
                    halign: 'left'

            Button:

                pos_hint: {'top': 1, 'right': 1}
                size_hint_x: (3.0625/8.5625)
                background_normal: ''
                background_color: app.mode_color
                background_down: ''
                halign: app.alignment
                font_name: app.font_file
                font_size: ((self.parent.width + self.parent.height) / 2) * 0.11
                text: app.engine_mode
                text_size: self.size
                valign: 'middle'
                color: 0, 0, 0, 1
                on_touch_up:
                    app.root.current = 'Service Lock'
                    app.title_changer('Service Lock')

            Image:
				source: 'hydradrop.png'
				#size_hint_x: 0.3125
				pos_hint: {'top': 1, 'right': 1.15}

        GridLayout:
            cols: 2
            padding: 10, 10, 10, 10
            spacing: 10, 10
            size_hint_y: 0.75

            TextInput:
                id: destination_id
                hint_text: 'Enter the new DestID'
                multiline: False
                on_text_validate: app.destination_changer(destination_id.text)
                font_size: ((self.parent.width + self.parent.height) / 3) * 0.075


            TextInput:
                id: source_id
                hint_text: 'Enter the new SourceID'
                on_text_validate: app.source_changer(source_id.text)
                multiline : False
                font_size: ((self.parent.width + self.parent.height) / 3) * 0.075


            Label:
                text: app.dest_id
                font_size: ((self.parent.width + self.parent.height) / 2) * 0.1
                font_name: app.bold_font_file
                color: 0.9215686275, 0.5882352941, 0.2745098039, 1
                size_hint_y: 0.5


            Label:
                text: app.source_id
                font_size: ((self.parent.width + self.parent.height) / 2) * 0.1
                font_name: app.bold_font_file
                color: 0.9215686275, 0.5882352941, 0.2745098039, 1
                size_hint_y: 0.5

        BoxLayout:
            id: reference
            orientation: 'horizontal'

            size_hint_max_y: root.height * (2.5 / 12)

            Button:

			    font_name: app.font_file
			    background_normal: ''
			    background_color: 52/255, 104/255, 162/255, 1
				font_size: ((self.parent.width + self.parent.height) / 2) * 0.15
				text: 'Main'
				on_release:
				    app.root.current = 'Fuel Gauge'
				    app.title_changer('Fuel Gauge')
				size: self.texture_size

            Label:
                text: app.arb_address
                font_size: ((self.parent.width + self.parent.height) / 2) * 0.095
                font_name: app.bold_font_file
                color: 0.9215686275, 0.5882352941, 0.2745098039, 1

            Button:
                background_normal: ''
                background_color: 52/255, 104/255, 162/255, 1
                text: 'Toggle Engine Mode'
                font_size: ((self.parent.width + self.parent.height) / 3) * 0.08
                font_name: app.font_file
                on_press: app.ModeSender()

<ModeLocking>:
    name: 'Service Lock'

    canvas.before:
    	# This color code is rgba and is for the background
	    Color:
	        rgba: 1, 1, 1, 1
		# Sets the size of the background to the size of the screen
	    Rectangle:
	        size: self.width, self.height

    BoxLayout:
    	# Sets the orientation for the box layout --> vertical
        orientation: 'vertical'

        # Putting a horizontal box layout within the vertical layout, this means that the top portion of the screen is then split horizontally
        FloatLayout:

            # Sets the size of the horizontal box layout so that its
            size: root.width, root.height * (200/960)
            size_hint_y: None

            FloatLayout:

                pos_hint: {'top': 1}

                Spinner:

                    size_hint_x: (5.5/8.5625)
                    pos_hint: {'top': 1}
                    values: app.dropdown_list
                    background_color: color_button if self.state == 'normal' else color_button_pressed
                    background_down: 'atlas://data/images/defaulttheme/spinner'
                    color: color_font
                    text: app.current_page
                    option_cls: Factory.get("MySpinnerOption")

                    on_text:
                        app.root.current = self.text
                        app.tester(self.text)
                        app.title_changer(self.text)

                Label:

                    text: app.current_page
                    pos_hint: {'top': 1}
                    color: 0, 0, 0, 1
                    size_hint_x: (5.5/8.5625)
                    font_name: app.font_file
                    font_size: ((self.parent.width + self.parent.height) / 2) * 0.14
                    color: 1, 1, 1, 1

                    canvas.before:
                        Color:
                            rgb: (52/255, 104/255, 162/255)
                        Rectangle:
                            size: self.width, self.height
                            pos: self.x, self.y
                    halign: 'left'

            Button:

                pos_hint: {'top': 1, 'right': 1}
                size_hint_x: (3.0625/8.5625)
                background_normal: ''
                background_color: app.mode_color
                background_down: ''
                halign: app.alignment
                font_name: app.font_file
                font_size: ((self.parent.width + self.parent.height) / 2) * 0.11
                text: app.engine_mode
                text_size: self.size
                valign: 'middle'
                color: 0, 0, 0, 1
                on_touch_up:
                    app.root.current = 'Service Lock'
                    app.title_changer('Service Lock')



            Image:
				source: 'hydradrop.png'
				#size_hint_x: 0.3125
				pos_hint: {'top': 1, 'right': 1.15}

        BoxLayout:
            orientation: 'horizontal'

            TextInput:
                id: password
                password: True
                hint_text: 'Enter the Passcode'
                multiline : False
                font_size: ((self.parent.width + self.parent.height) / 3) * 0.1

            Button:
                background_normal: ''
			    background_color: root.wrong_password_ind
                text: 'Submit Password'
                on_press: root.code_tester(password.text)
                on_touch_up: password.text = ''
                font_size: ((self.parent.width + self.parent.height) / 3) * 0.1

        Label:
            font_size:
            text: root.status
            font_size: ((self.parent.width + self.parent.height) / 2) * 0.1
            font_name: app.font_file
            color: 0.9215686275, 0.5882352941, 0.2745098039, 1

	    BoxLayout:

		    id: reference
			orientation: 'horizontal'
			size_hint_max_y: root.height * (2.5 / 12)

			Button:

			    font_name: app.font_file
			    background_normal: ''
			    background_color: 52/255, 104/255, 162/255, 1
				font_size: ((self.parent.width + self.parent.height) / 2) * 0.15
				text: 'Main'
				on_release:
				    app.root.current = 'Fuel Gauge'
				    app.title_changer('Fuel Gauge')
				    app.tester(self.text)
				size: self.texture_size

			Label:

		    Label:


<FuelGaugeLayout>:
    name: 'Fuel Gauge'

    canvas.before:
    	# This color code is rgba and is for the background
	    Color:
	        rgba: 1, 1, 1, 1
		# Sets the size of the background to the size of the screen
	    Rectangle:
	        size: self.width, self.height

    BoxLayout:

    	# Sets the orientation for the box layout --> vertical
        orientation: 'vertical'

        # Putting a horizontal box layout within the vertical layout, this means that the top portion of the screen is then split horizontally
        FloatLayout:

            # Sets the size of the horizontal box layout so that its
            size: root.width, root.height * (200/960)
            size_hint_y: None

            FloatLayout:
                #size: root.width, root.height * (200/960)
                pos_hint: {'top': 1}

                Spinner:
                    size_hint_x: (5.5/8.5625)
                    pos_hint: {'top': 1}
                    values: app.dropdown_list
                    #background_color: color_button if self.state == 'normal' else color_button_pressed
                    background_down: 'atlas://data/images/defaulttheme/spinner'
                    color: color_font
                    option_cls: Factory.get("MySpinnerOption")
                    #text: 'Fuel Gauge'
                    text: app.current_page
                    font_name: app.font_file

                    on_text:
                        app.title_changer(self.text)
                        app.root.current = self.text
                        app.tester(self.text)


                Label:

                    text: app.current_page
                    pos_hint: {'top': 1}
                    color: 0, 0, 0, 1
                    size_hint_x: (5.5/8.5625)
                    font_name: app.font_file
                    font_size: ((self.parent.width + self.parent.height) / 2) * 0.14
                    color: 1, 1, 1, 1

                    canvas.before:
                        Color:
                            rgb: (52/255, 104/255, 162/255)
                        Rectangle:
                            size: self.width, self.height
                            pos: self.x, self.y
                    halign: 'left'

            Button:

                pos_hint: {'top': 1, 'right': 1}
                size_hint_x: (3.0625/8.5625)
                background_normal: ''
                background_color: app.mode_color
                background_down: ''
                halign: app.alignment
                font_name: app.font_file
                font_size: ((self.parent.width + self.parent.height) / 2) * 0.11
                text: app.engine_mode
                text_size: self.size
                valign: 'middle'
                color: 0, 0, 0, 1
                on_touch_up:
                    app.root.current = 'Service Lock'
                    app.title_changer('Service Lock')



            Image:
				source: 'hydradrop.png'
				#size_hint_x: 0.3125
				pos_hint: {'top': 1, 'right': 1.15}

        FloatLayout:
            id: outer_lay

            Image:
                id: gauge_dash
                source: 'cadran.png'
                size_hint_max: 600, 300
                pos_hint: {'center_x': 0.5, 'center_y': 0.5}

            Image:
                id: needle_dash
                canvas.before:

                    PushMatrix
                    Rotate:
                        angle: 90 - (root.dash_val * app.conversion_factor)
                        origin: root.width * 0.5, (root.height - self.height)/1.85

                canvas.after:
                    PopMatrix

                source: 'new_needle.png'
                size_hint_max: 150, 300
                pos_hint: {'center_x': 0.5, 'center_y': 0.418}

		BoxLayout:

		    id: reference
			orientation: 'horizontal'

			size_hint_max_y: root.height * (2.5 / 12)

			Label:

			    canvas.before:
                    Color:
                        rgb: .172549, .19215, .42

                    Rectangle:
                        size: self.width, self.height
                        pos: self.x, self.y

			    font_name: app.font_file
				font_size: ((self.parent.width + self.parent.height) / 2) * 0.15
				text: u'H\u2082:'
				size: self.texture_size
				color: 0.9215686275, 0.5882352941, 0.2745098039, 1

			Label:

			    canvas.before:
                    Color:
                        rgb: .172549, .19215, .42

                    Rectangle:
                        size: self.width, self.height
                        pos: self.x, self.y

			    font_name: app.font_file
			    color: 0.9215686275, 0.5882352941, 0.2745098039, 1
				text: root.dash_label + 'kg'
				font_size: ((self.parent.width + self.parent.height) / 2) * 0.125

			Label:

			    canvas.before:
                    Color:
                        rgb: .172549, .19215, .42

                    Rectangle:
                        size: self.width, self.height
                        pos: self.x, self.y

			    text: root.percent_label + '%'
			    font_name: app.font_file
			    color: 0.9215686275, 0.5882352941, 0.2745098039, 1
				font_size: ((self.parent.width + self.parent.height) / 2) * 0.125

<FuelInjectionLayout>:
	name: 'Injection Rate'

	canvas.before:
    	# This color code is rgba and is for the background
	    Color:
	        rgba: 1, 1, 1, 1
		# Sets the size of the background to the size of the screen
	    Rectangle:
	        size: self.width, self.height

    BoxLayout:
    	# Sets the orientation for the box layout --> vertical
        orientation: 'vertical'

        # Putting a horizontal box layout within the vertical layout, this means that the top portion of the screen is then split horizontally
        FloatLayout:

            size: root.width, root.height * (200/960)
            size_hint_y: None

            FloatLayout:
                #size: root.width, root.height * (200/960)
                pos_hint: {'top': 1}

                Spinner:

                    size_hint_x: (5.5/8.5625)
                    pos_hint: {'top': 1}
                    values: app.dropdown_list
                    background_color: color_button if self.state == 'normal' else color_button_pressed
                    background_down: 'atlas://data/images/defaulttheme/spinner'
                    color: color_font
                    text: app.current_page
                    option_cls: Factory.get("MySpinnerOption")

                    on_text:
                        app.root.current = self.text
                        app.tester(self.text)
                        app.title_changer(self.text)

                Label:

                    text: app.current_page
                    pos_hint: {'top': 1}
                    color: 0, 0, 0, 1
                    size_hint_x: (5.5/8.5625)
                    font_name: app.font_file
                    font_size: ((self.parent.width + self.parent.height) / 2) * 0.14
                    color: 1, 1, 1, 1

                    canvas.before:
                        Color:
                            rgb: (52/255, 104/255, 162/255)
                        Rectangle:
                            size: self.width, self.height
                            pos: self.x, self.y
                    halign: 'left'

            Button:

                pos_hint: {'top': 1, 'right': 1}
                size_hint_x: (3.0625/8.5625)
                background_normal: ''
                background_color: app.mode_color
                background_down: ''
                halign: app.alignment
                font_name: app.font_file
                font_size: ((self.parent.width + self.parent.height) / 2) * 0.11
                text: app.engine_mode
                text_size: self.size
                valign: 'middle'
                color: 0, 0, 0, 1
                on_touch_up:
                    app.root.current = 'Service Lock'
                    app.title_changer('Service Lock')



            Image:

				source: 'hydradrop.png'
				pos_hint: {'top': 1, 'right': 1.15}


		GridLayout:
		    cols: 2

		    Label:
		        text: 'Injection Rate:'
		        font_name: app.bold_font_file
		        color: 52/255, 104/255, 162/255, 1
		        halign: 'right'
		        font_size: ((self.parent.width + self.parent.height) / 2) * 0.085

		    Label:
		        text: root.hInjection + 'kg/h'
		        color: 235/255, 150/255, 72/255, 1
		        font_size: ((self.parent.width + self.parent.height) / 2) * 0.1
		        font_name: app.bold_font_file

		    Label:
		        text: 'H2 Leakage:'
		        font_name: app.bold_font_file
		        color: 52/255, 104/255, 162/255, 1
		        font_size: ((self.parent.width + self.parent.height) / 2) * 0.085

		    Label:
		        text: root.leak_display + 'g/min'
		        color: 235/255, 150/255, 72/255, 1
		        font_size: ((self.parent.width + self.parent.height) / 2) * 0.1
		        font_name: app.bold_font_file

		BoxLayout:
		    id: reference
			orientation: 'horizontal'
			size_hint_max_y: root.height * (2.5 / 12)

			Button:

			    font_name: app.font_file
			    background_normal: ''
			    background_color: 52/255, 104/255, 162/255, 1
				font_size: ((self.parent.width + self.parent.height) / 2) * 0.15
				text: 'Main'
				on_release:
				    app.root.current = 'Fuel Gauge'
				    app.title_changer('Fuel Gauge')
				    app.tester(self.text)
				size: self.texture_size

            Label:
			Label:




<ScreenSaver>:
    name: 'Screensaver'

    canvas.before:
		Color:
			rgba: 1, 1, 1, 1
		Rectangle:
			size: root.width, root.height
			pos: root.pos

    BoxLayout:
    	# Sets the orientation for the box layout --> vertical
        orientation: 'vertical'

        # Putting a horizontal box layout within the vertical layout, this means that the top portion of the screen is then split horizontally
        FloatLayout:

            size: root.width, root.height * (200/960)
            size_hint_y: None

            FloatLayout:
                #size: root.width, root.height * (200/960)
                pos_hint: {'top': 1}

                Spinner:

                    size_hint_x: (5.5/8.5625)
                    pos_hint: {'top': 1}
                    values: app.dropdown_list
                    background_color: color_button if self.state == 'normal' else color_button_pressed
                    background_down: 'atlas://data/images/defaulttheme/spinner'
                    color: color_font
                    option_cls: Factory.get("MySpinnerOption")

                    on_text:

                        app.root.current = self.text
                        app.tester(self.text)
                        app.title_changer(self.text)

                Label:

                    text: app.current_page
                    pos_hint: {'top': 1}
                    color: 0, 0, 0, 1
                    size_hint_x: (5.5/8.5625)
                    font_name: app.font_file
                    font_size: ((self.parent.width + self.parent.height) / 2) * 0.14
                    color: 1, 1, 1, 1

                    canvas.before:
                        Color:
                            rgb: (52/255, 104/255, 162/255)
                        Rectangle:
                            size: self.width, self.height
                            pos: self.x, self.y
                    halign: 'left'

            Button:

                pos_hint: {'top': 1, 'right': 1}
                size_hint_x: (3.0625/8.5625)
                background_normal: ''
                background_color: app.mode_color
                background_down: ''
                halign: app.alignment
                font_name: app.font_file
                font_size: ((self.parent.width + self.parent.height) / 2) * 0.11
                text: app.engine_mode
                text_size: self.size
                valign: 'middle'
                color: 0, 0, 0, 1
                on_touch_up:
                    app.root.current = 'Service Lock'
                    app.title_changer('Service Lock')



            Image:

				source: 'hydradrop.png'
				#size_hint_x: 0.3125
				pos_hint: {'top': 1, 'right': 1.15}

		FloatLayout:
			size: root.width, root.height * (2.5 / 12)

			Image:
				pos: root.screen_pos[0], root.screen_pos[1]
				size_hint_max: root.width * (1 / 3), root.height * (1 / 4)

				source: 'logo.png'


<TankTempPress>:
    name: 'Temp & Press'

    canvas.before:
    	# This color code is rgba and is for the background
	    Color:
	        rgba: 1, 1, 1, 1
		# Sets the size of the background to the size of the screen
	    Rectangle:
	        size: self.width, self.height

    BoxLayout:
    	# Sets the orientation for the box layout --> vertical
        orientation: 'vertical'

        # Putting a horizontal box layout within the vertical layout, this means that the top portion of the screen is then split horizontally
        FloatLayout:

            size: root.width, root.height * (200/960)
            size_hint_y: None

            FloatLayout:
                pos_hint: {'top': 1}

                Spinner:

                    size_hint_x: (5.5/8.5625)
                    pos_hint: {'top': 1}
                    values: app.dropdown_list
                    background_color: color_button if self.state == 'normal' else color_button_pressed
                    background_down: 'atlas://data/images/defaulttheme/spinner'
                    color: color_font
                    text: app.current_page
                    option_cls: Factory.get("MySpinnerOption")

                    on_text:
                        app.root.current = self.text
                        app.title_changer(self.text)
                        app.tester(self.text)

                Label:

                    text: app.current_page
                    pos_hint: {'top': 1}
                    color: 0, 0, 0, 1
                    size_hint_x: (5.5/8.5625)
                    font_name: app.font_file
                    font_size: ((self.parent.width + self.parent.height) / 2) * 0.14
                    color: 1, 1, 1, 1

                    canvas.before:
                        Color:
                            rgb: (52/255, 104/255, 162/255)
                        Rectangle:
                            size: self.width, self.height
                            pos: self.x, self.y
                    halign: 'left'

            Button:

                pos_hint: {'top': 1, 'right': 1}
                size_hint_x: (3.0625/8.5625)
                background_normal: ''
                background_down: ''
                background_color: app.mode_color
                halign: app.alignment
                font_name: app.font_file
                font_size: ((self.parent.width + self.parent.height) / 2) * 0.11
                text: app.engine_mode
                text_size: self.size
                valign: 'middle'
                color: 0, 0, 0, 1
                on_touch_up:
                    app.root.current = 'Service Lock'
                    app.title_changer('Service Lock')



            Image:
				source: 'hydradrop.png'
				pos_hint: {'top': 1, 'right': 1.15}

        BoxLayout:
            size_hint_y: 0.225
            orientation: 'horizontal'

            Label:
			    color: 52/255, 104/255, 162/255, 1
			    font_size: ((self.parent.width + self.parent.height) / 3) * 0.12
			    font_name: app.font_file
                size: self.texture_size
                bold: True
                text: 'Tank Temperatures:'

            Label:
			    color: 52/255, 104/255, 162/255, 1
			    font_size: ((self.parent.width + self.parent.height) / 3) * 0.12
			    font_name: app.font_file
                size: self.texture_size
                bold: True
                text: 'Pressures:'


        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: 0.5

            Label:
                size_hint_x: 0.08

            BoxLayout:
                orientation: 'vertical'

                GridLayout:
                    cols: 2
                    #Label:
                        #canvas.before:
                        #    Color:
                        #        rgba: .172549, .19215, .42, 1
                        #    Line:
                        #        width: 2.5
                        #        rectangle: self.x, self.y, self.width, self.height
                        #
                        #text: 'T0: ' + str(app.temps[0]) + u' \u00BAC'
                        #font_size: ((self.parent.width + self.parent.height) / 3) * 0.12
                        #font_name: app.font_file
                        #color: 52/255, 104/255, 162/255, 1

                    Label:
                        canvas.before:
                            Color:
                                rgba: .172549, .19215, .42, 1
                            Line:
                                width: 2.5
                                rectangle: self.x, self.y, self.width, self.height
                        text: 'T1: ' + str(app.temps[0])# + u' \u00BAC'
                        bold: True
                        font_size: ((self.parent.width + self.parent.height) / 3) * 0.16
                        font_name: app.bold_font_file
                        color: 52/255, 104/255, 162/255, 1

                    Label:
                        canvas.before:
                            Color:
                                rgba: .172549, .19215, .42, 1
                            Line:
                                width: 2.5
                                rectangle: self.x, self.y, self.width, self.height
                        text: 'T2: ' + str(app.temps[1])# + u' \u00BAC'
                        bold: True
                        font_size: ((self.parent.width + self.parent.height) / 3) * 0.16
                        font_name: app.bold_font_file
                        color: 52/255, 104/255, 162/255, 1

                    Label:
                        canvas.before:
                            Color:
                                rgba: .172549, .19215, .42, 1
                            Line:
                                width: 2.5
                                rectangle: self.x, self.y, self.width, self.height
                        text: 'T3: ' + str(app.temps[2])# + u' \u00BAC'
                        bold: True
                        font_size: ((self.parent.width + self.parent.height) / 3) * 0.16
                        font_name: app.bold_font_file
                        color: 52/255, 104/255, 162/255, 1
                        bold: True

                    Label:
                        canvas.before:
                            Color:
                                rgba: .172549, .19215, .42, 1
                            Line:
                                width: 2.5
                                rectangle: self.x, self.y, self.width, self.height
                        text: 'T4:' + str(app.temps[3])# + u' \u00BAC'
                        bold: True
                        font_size: ((self.parent.width + self.parent.height) / 3) * 0.16
                        font_name: app.bold_font_file
                        color: 52/255, 104/255, 162/255, 1


                GridLayout:
                    size_hint_y: 0.5
                    cols: 1


                    Label:

                        canvas.before:
                            Color:
                                rgba: .172549, .19215, .42, 1
                            Line:
                                width: 2.5
                                rectangle: self.x, self.y, self.width, self.height

                        text: 'T5: ' + str(app.temps[4])# + u' \u00BAC'

                        font_size: ((self.parent.width + (2*self.parent.height)) / 3) * 0.14
                        font_name: app.bold_font_file
                        bold: True
                        halign: 'center'
                        color: 52/255, 104/255, 162/255, 1

            Label:
                size_hint_x: 0.08


            GridLayout:
                cols: 1

                Label:
                    canvas.before:
                        Color:
                            rgba: .172549, .19215, .42, 1
                        Line:
                            width: 2.5
                            rectangle: self.x, self.y, self.width, self.height
                    text: 'P1: ' + str(app.pressures[0]) + ' - Tank'
                    font_size: ((self.parent.width + self.parent.height) / 3) * 0.15
                    font_name: app.bold_font_file
                    bold: True
                    color: 52/255, 104/255, 162/255, 1

                Label:
                    canvas.before:
                        Color:
                            rgba: .172549, .19215, .42, 1
                        Line:
                            width: 2.5
                            rectangle: self.x, self.y, self.width, self.height
                    text: 'P2: ' + str(app.pressures[1]) + ' - Rail'
                    font_size: ((self.parent.width + self.parent.height) / 3) * 0.15
                    font_name: app.bold_font_file
                    bold: True
                    color: 52/255, 104/255, 162/255, 1

            Label:
                size_hint_x: 0.08

        Label:
            size_hint_y:0.1


        BoxLayout:
		    id: reference
			orientation: 'horizontal'
			size_hint_max_y: root.height * (2.5 / 12)

			Button:

			    font_name: app.font_file
			    background_normal: ''
			    background_color: 52/255, 104/255, 162/255, 1
				font_size: ((self.parent.width + self.parent.height) / 2) * 0.15
				text: 'Main'
				on_release:
				    app.root.current = 'Fuel Gauge'
				    app.title_changer('Fuel Gauge')
				    app.tester(self.text)
				size: self.texture_size

			Label:
			Label:






<ErrorPage>:
    name: 'Fault Info'

    canvas.before:
    	# This color code is rgba and is for the background
	    Color:
	        rgba: 1, 1, 1, 1
		# Sets the size of the background to the size of the screen
	    Rectangle:
	        size: self.width, self.height

    BoxLayout:
    	# Sets the orientation for the box layout --> vertical
        orientation: 'vertical'

        # Putting a horizontal box layout within the vertical layout, this means that the top portion of the screen is then split horizontally
        FloatLayout:

            size: root.width, root.height * (200/960)
            size_hint_y: None


            FloatLayout:
                #size: root.width, root.height * (200/960)
                pos_hint: {'top': 1}

                Spinner:

                    size_hint_x: (5.5/8.5625)
                    pos_hint: {'top': 1}
                    values: app.dropdown_list
                    background_color: color_button if self.state == 'normal' else color_button_pressed
                    background_down: 'atlas://data/images/defaulttheme/spinner'
                    color: color_font
                    text: app.current_page
                    option_cls: Factory.get("MySpinnerOption")

                    on_text:
                        app.root.current = self.text
                        app.title_changer(self.text)
                        app.tester(self.text)

                Label:

                    text: app.current_page
                    pos_hint: {'top': 1}
                    color: 0, 0, 0, 1
                    size_hint_x: (5.5/8.5625)
                    font_name: app.font_file
                    font_size: ((self.parent.width + self.parent.height) / 2) * 0.14
                    color: 1, 1, 1, 1

                    canvas.before:
                        Color:
                            rgb: (52/255, 104/255, 162/255)
                        Rectangle:
                            size: self.width, self.height
                            pos: self.x, self.y
                    halign: 'left'

            Button:

                pos_hint: {'top': 1, 'right': 1}
                size_hint_x: (3.0625/8.5625)
                background_normal: ''
                background_down: ''
                background_color: app.mode_color
                halign: app.alignment
                font_name: app.font_file
                font_size: ((self.parent.width + self.parent.height) / 2) * 0.11
                text: app.engine_mode
                text_size: self.size
                valign: 'middle'
                color: 0, 0, 0, 1
                on_touch_up:
                    app.root.current = 'Service Lock'
                    app.title_changer('Service Lock')



            Image:
				source: 'hydradrop.png'
				pos_hint: {'top': 1, 'right': 1.15}

	    Label:
	        size_hint_y: 0.1

	    BoxLayout:
	        orientation: 'horizontal'

	        Label:
	            size_hint_x: .05


            GridLayout:
                size_hint_y:
                #size_hint_x:
                halign: 'center'


                cols: 2

                Label:
                    canvas.before:
                        Color:
                            rgba: .172549, .19215, .42, 1
                        Line:
                            width: 2.5
                            rectangle: self.x, self.y, self.width, self.height
                    text: 'Error Code:'
                    font_size: ((self.parent.width + self.parent.height) / 2) * 0.075
                    bold: True
                    size: self.texture_size
                    color: 52/255, 104/255, 162/255, 1
                    padding_x: 50

                Label:
                    canvas.before:
                        Color:
                            rgba: .172549, .19215, .42, 1
                        Line:
                            width: 2.5
                            rectangle: self.x, self.y, self.width, self.height
                    text: app.error_code
                    font_size: ((self.parent.width + self.parent.height) / 2) * 0.075
                    size: self.texture_size
                    valign: 'middle'
                    bold: True
                    halign: 'center'
                    color: 52/255, 104/255, 162/255, 1
                    padding_x: 50

                Label:
                    canvas.before:
                        Color:
                            rgba: .172549, .19215, .42, 1
                        Line:
                            width: 2.5
                            rectangle: self.x, self.y, self.width, self.height
                    text: 'Error Message:'
                    font_size: ((self.parent.width + self.parent.height) / 2) * 0.075
                    bold: True
                    size: self.texture_size
                    color: 52/255, 104/255, 162/255, 1
                    padding_x: 50

                Label:
                    canvas.before:
                        Color:
                            rgba: .172549, .19215, .42, 1
                        Line:
                            width: 2.5
                            rectangle: self.x, self.y, self.width, self.height
                    text: root.error_expl
                    bold: True
                    size: self.texture_size
                    font_size: ((self.parent.width + self.parent.height) / 2) * 0.075
                    valign: 'middle'
                    color: 52/255, 104/255, 162/255, 1
                    padding_x: 50

                Label:
                    canvas.before:
                        Color:
                            rgba: .172549, .19215, .42, 1
                        Line:
                            width: 2.5
                            rectangle: self.x, self.y, self.width, self.height
                    text: 'MIL Light:'
                    font_size: ((self.parent.width + self.parent.height) / 2) * 0.075
                    bold: True
                    size: self.texture_size
                    color: 52/255, 104/255, 162/255, 1
                    padding_x: 50

                Label:
                    canvas.before:
                        Color:
                            rgba: .172549, .19215, .42, 1
                        Line:
                            width: 2.5
                            rectangle: self.x, self.y, self.width, self.height
                    text: app.mil_light
                    font_size: ((self.parent.width + self.parent.height) / 2) * 0.075
                    bold: True
                    size: self.texture_size
                    color: 52/255, 104/255, 162/255, 1
                    padding_x: 50

                Label:
                    canvas.before:
                        Color:
                            rgba: .172549, .19215, .42, 1
                        Line:
                            width: 2.5
                            rectangle: self.x, self.y, self.width, self.height
                    text: 'DPF Status:'
                    font_size: ((self.parent.width + self.parent.height) / 2) * 0.075
                    bold: True
                    size: self.texture_size
                    padding_x: 50
                    color: 52/255, 104/255, 162/255, 1

                Label:
                    canvas.before:
                        Color:
                            rgba: .172549, .19215, .42, 1
                        Line:
                            width: 2.5
                            rectangle: self.x, self.y, self.width, self.height
                    text: app.dpf_status
                    font_size: ((self.parent.width + self.parent.height) / 2) * 0.075
                    bold: True
                    size: self.texture_size
                    color: 52/255, 104/255, 162/255, 1
                    padding_x: 50

                Label:
                    canvas.before:
                        Color:
                            rgba: .172549, .19215, .42, 1
                        Line:
                            width: 2.5
                            rectangle: self.x, self.y, self.width, self.height
                    text: 'Coolant Temp:'
                    font_size: ((self.parent.width + self.parent.height) / 2) * 0.075
                    bold: True
                    size: self.texture_size
                    color: 52/255, 104/255, 162/255, 1
                    padding_x: 50

                Label:
                    canvas.before:
                        Color:
                            rgba: .172549, .19215, .42, 1
                        Line:
                            width: 2.5
                            rectangle: self.x, self.y, self.width, self.height
                    text: app.coolant_temp
                    font_size: ((self.parent.width + self.parent.height) / 2) * 0.075
                    bold: True
                    size: self.texture_size
                    color: 52/255, 104/255, 162/255, 1
                    padding_x: 50
            Label:
                size_hint_x: .05
        Label:
	        size_hint_y: 0.1


        BoxLayout:
		    id: reference
			orientation: 'horizontal'

			size_hint_max_y: root.height * (2.5 / 12)

			Button:

			    font_name: app.font_file
			    background_normal: ''
			    background_color: 52/255, 104/255, 162/255, 1
				font_size: ((self.parent.width + self.parent.height) / 2) * 0.15
				text: 'Main'
				on_release:
				    app.root.current = 'Fuel Gauge'
				    app.title_changer('Fuel Gauge')
				    app.tester(self.text)
				size: self.texture_size

			Label:
			Label:

<Mode>:
    name: 'Engine Mode'

    canvas.before:
    	# This color code is rgba and is for the background
	    Color:
	        rgba: 1, 1, 1, 1
		# Sets the size of the background to the size of the screen
	    Rectangle:
	        size: self.width, self.height

    BoxLayout:
    	# Sets the orientation for the box layout --> vertical
        orientation: 'vertical'

        # Putting a horizontal box layout within the vertical layout, this means that the top portion of the screen is then split horizontally
        FloatLayout:

            size: root.width, root.height * (200/960)
            size_hint_y: None

            FloatLayout:

                pos_hint: {'top': 1}

                Spinner:

                    size_hint_x: (5.5/8.5625)
                    pos_hint: {'top': 1}
                    values: app.dropdown_list
                    background_color: color_button if self.state == 'normal' else color_button_pressed
                    #background_down: 'atlas://data/images/defaulttheme/spinner'
                    background_normal: ''
                    text: app.current_page
                    color: 0, 0, 0, 1
                    option_cls: Factory.get("MySpinnerOption")

                    on_text:
                        app.title_changer(self.text)
                        app.root.current = self.text

                        app.tester(self.text)

                Label:

                    text: app.current_page
                    pos_hint: {'top': 1}
                    color: 0, 0, 0, 1
                    size_hint_x: (5.5/8.5625)
                    font_name: app.font_file
                    font_size: ((self.parent.width + self.parent.height) / 2) * 0.14
                    color: 1, 1, 1, 1

                    canvas.before:
                        Color:
                            rgb: (52/255, 104/255, 162/255)
                        Rectangle:
                            size: self.width, self.height
                            pos: self.x, self.y
                    halign: 'left'

            Button:

                pos_hint: {'top': 1, 'right': 1}
                size_hint_x: (3.0625/8.5625)
                background_normal: ''
                background_down: ''
                background_color: app.mode_color
                halign: app.alignment
                font_name: app.font_file
                font_size: ((self.parent.width + self.parent.height) / 2) * 0.11
                text: app.engine_mode
                text_size: self.size
                valign: 'middle'
                color: 0, 0, 0, 1
                on_touch_up:
                    app.root.current = 'Service Lock'
                    app.title_changer('Service Lock')



            Image:
				source: 'hydradrop.png'
				pos_hint: {'top': 1, 'right': 1.15}

        GridLayout:
		    cols: 2

		    Label:
		        text: 'Current:'
		        font_name: app.bold_font_file
		        color: 52/255, 104/255, 162/255, 1
		        halign: 'right'
		        font_size: ((self.parent.width + self.parent.height) / 2) * 0.085

		    Label:
		        text: app.current_mode
		        color: 235/255, 150/255, 72/255, 1
		        font_size: ((self.parent.width + self.parent.height) / 2) * 0.1
		        font_name: app.bold_font_file

		    Label:
		        text: 'App Request:'
		        font_name: app.bold_font_file
		        color: 52/255, 104/255, 162/255, 1
		        font_size: ((self.parent.width + self.parent.height) / 2) * 0.085

		    Label:
		        text: app.engine_mode
		        color: 235/255, 150/255, 72/255, 1
		        font_size: ((self.parent.width + self.parent.height) / 2) * 0.1
		        font_name: app.bold_font_file

		    Label:
		        text: 'Truck Request:'
		        font_name: app.bold_font_file
		        color: 52/255, 104/255, 162/255, 1
		        font_size: ((self.parent.width + self.parent.height) / 2) * 0.085

		    Label:
		        text: app.truck_reqd
		        color: 235/255, 150/255, 72/255, 1
		        font_size: ((self.parent.width + self.parent.height) / 2) * 0.1
		        font_name: app.bold_font_file




		BoxLayout:
		    id: reference
			orientation: 'horizontal'

			size_hint_max_y: root.height * (2.5 / 12)

			Button:

			    font_name: app.font_file
			    background_normal: ''
			    background_color: 52/255, 104/255, 162/255, 1
				font_size: ((self.parent.width + self.parent.height) / 2) * 0.15
				text: 'Main'
				on_release: 
				    app.root.current = 'Fuel Gauge'
				    app.title_changer('Fuel Gauge')
				    app.tester(self.text)
				size: self.texture_size

			Label:
			Button:
                background_normal: ''
                background_color: 52/255, 104/255, 162/255, 1
                text: 'Toggle Engine Mode'
                font_size: ((self.parent.width + self.parent.height) / 3) * 0.08
                font_name: app.font_file
                on_press: app.ModeSender()




            
